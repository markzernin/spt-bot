require('./bot/middleware/command/start.command');
const {bot} = require('./bot/connections/token.connection');

// const { Telegraf, Markup }  = require('telegraf');
// const axios = require('axios');
// require('dotenv').config();
//
// const getKeyboardMenu = () => {
//     return Markup.keyboard([
//         [Markup.button.callback('üì¢ –ü–æ–º–æ—â—å', 'help'), Markup.button.callback('üì¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', 'timetable')],
//         [Markup.button.callback('üì¢ –ü–æ–º–æ—â—å', 'help')]
//     ]).resize().oneTime()
// };
//
// let group = "–ü–†-19";
//
// const bot = new Telegraf(process.env.TELEGRAM_TOKEN);
//
// bot.start(async (ctx) => {
//
// })
//
// bot.hears('üì¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', async (ctx) => {
//     await ctx.reply('–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã.\n–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–°-20');
//     const response = await fetch('https://spt42.ru/studentu/korpus-2/data/23.01.2023.json');
//     const json = await response.json();
//
//     const timetable = json.filter(el => el['–ì—Ä—É–ø–ø–∞'] == group);
//
//     let text = `–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã ${group}:\n\n`;
//
//     timetable.forEach((el) => {
//         text += `–ù–æ–º–µ—Ä –ø–∞—Ä—ã: <b>${el['–ù–æ–º–µ—Ä–ü–∞—Ä—ã']}</b>\n–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: <b>${el['–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞']}</b>\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: <b>${el['–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å']}</b>\n–ê—É–¥–∏—Ç–æ—Ä–∏—è: <b>${el['–ê—É–¥–∏—Ç–æ—Ä–∏—è']}</b>\n\n`;
//     });
//
//     await ctx.replyWithHTML(text);
//
// })

require('./bot/middleware/action/groupButtons.action');
require('./bot/middleware/hears/timetable.hears');

require('./bot/connections/local.connection');

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));